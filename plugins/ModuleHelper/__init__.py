import hashlib
from pathlib import Path
from traceback import format_exc
from urllib.parse import urlparse
import requests
import shutil
import re
import os

from ..UserBot import build_module_help_text
from utils import *
from utils import M as Message


async def dml(app, mod: Module, msg, notify, url, no_alert=False):
    
    plugins = get_root(True) / 'plugins'

    if not no_alert:
        if urlparse(url).netloc not in Config.DML_WHITELIST:
            buttons = Buttons(
                [
                    [
                        Button("–í—Å–µ —Ä–∞–≤–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å (–Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ!)", callback_data='download_anyway', extra_data={'url': url})
                    ]
                ], general_extra_data={'msg': msg}
            )
            await mod.send_buttons(
                msg.chat.id,
                b("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –í—ã –∑–∞–≥—Ä—É–∂–∞–µ—Ç–µ –º–æ–¥—É–ª—å —Å –Ω–µ–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞. "
                "–≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ ‚Äî —Ñ–∞–π–ª –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–π –∫–æ–¥ –∏–ª–∏ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã. "
                "–ó–∞–≥—Ä—É–∑–∫–∞ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –º–æ–¥—É–ª—è –º–æ–≥—É—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å —É–≥—Ä–æ–∑—É –¥–ª—è "
                "–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∞ —Ç–∞–∫–∂–µ –∞–∫–∫–∞—É–Ω—Ç–∞ Telegram. "
                "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–æ–≤–µ—Ä—è–µ—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫—É –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π.", False),
                buttons=buttons, message_thread_id=msg.message_thread_id
            )
            await msg.delete()
            return
    try:
        r = requests.get(url, stream=True, timeout=Config.DML_TIMEOUT)
        if 'Content-Disposition' in r.headers:
            filename = r.headers['Content-Disposition'].split('filename=')[-1].strip('";')
        else:
            await notify(f"{emoji(5240241223632954241, 'üö´')} –û—à–∏–±–∫–∞! –ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –ª–∏–±–æ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω!")
            return

        if not filename.endswith('.rimtub-module'):
            await notify(f"{emoji(5240241223632954241, 'üö´')} –û—à–∏–±–∫–∞! –§–∞–π–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ–∞–π–ª–æ–º –º–æ–¥—É–ª—è RimTUB!")
            return

        save_path = plugins / 'ModuleHelper' / filename
        with open(save_path, 'wb') as file:
            for chunk in r.iter_content(chunk_size=8192):
                file.write(chunk)

        unpack_module(save_path, plugins / os.path.splitext(filename)[0])
        os.remove(save_path)
        
        await app.load_module(os.path.splitext(filename)[0], restart=True, exception=True, all_clients=True)

        for client in clients:
            r = await client._start_on_ready(os.path.splitext(filename)[0])
            if r[0] == 'error':
                raise r[1]

        await notify(f"{emoji(5206607081334906820, '‚úÖ')} –ú–æ–¥—É–ª—å {b(os.path.splitext(filename)[0])} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")

    except requests.exceptions.RequestException as e:
        await notify(
            b(f"{emoji(5240241223632954241, 'üö´')} –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! {escape(e.__class__.__name__)}.\n", False)
            + f"–í–æ–∑–º–æ–∂–Ω–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –Ω–µ–≤–µ—Ä–Ω–∞ –ª–∏–±–æ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫—É"
        )  
    except Exception as e:
        await notify(
            b(f"{emoji(5240241223632954241, 'üö´')} –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {escape(e.__class__.__name__)}:\n", False)
            + escape(e) + f"\n{await paste(format_exc())}"
        )
        mod.logger.error('dml error', exc_info=True)

async def dmf(app: Client, mod: Module, msg, notify, file_path, name, no_alert=False, no_alert_version=False):
    if not no_alert:
        with open(file_path, 'rb') as f:
            data = f.read()
        hash = hashlib.sha256(data).hexdigest()
        try:
            raise ... # this check does not work anyway
            r = requests.get(CHECK_HASH_URL.format(hash=hash), timeout=DMF_TIMEOUT)
        except Exception:
            buttons = Buttons(
                [
                    [
                        Button(
                            "–í—Å–µ —Ä–∞–≤–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å (–Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ!)",
                            callback_data='download_anyway_dmf',
                            extra_data={
                                'file_path': file_path,
                                'name': name
                            }
                        )
                    ]
                ], general_extra_data={'msg': msg}
            )
            await mod.send_buttons(
                msg.chat.id,
                b("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –º–æ–¥—É–ª—å –Ω–∞ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å! "
                "–≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ ‚Äî —Ñ–∞–π–ª –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–π –∫–æ–¥ –∏–ª–∏ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã. "
                "–ó–∞–≥—Ä—É–∑–∫–∞ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –º–æ–¥—É–ª—è –º–æ–≥—É—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å —É–≥—Ä–æ–∑—É –¥–ª—è "
                "–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∞ —Ç–∞–∫–∂–µ –∞–∫–∫–∞—É–Ω—Ç–∞ Telegram. "
                "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–æ–≤–µ—Ä—è–µ—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫—É –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π.", False),
                buttons=buttons, message_thread_id=msg.message_thread_id,
                reply_to_message_id=msg.reply_to_message_id if msg else None
            )
            await msg.delete()
            return
        
        if not r.json()['exists']:
            buttons = Buttons(
                [
                    [
                        Button(
                            "–í—Å–µ —Ä–∞–≤–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å (–Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ!)",
                            callback_data='download_anyway_dmf',
                            extra_data={
                                'file_path': file_path,
                                'name': name
                            }
                        )
                    ]
                ], general_extra_data={'msg': msg}
            )
            await mod.send_buttons(
                msg.chat.id,
                b("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –î–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º —Å–∞–π—Ç–µ –∏ –Ω–µ –ø—Ä–æ—à—ë–ª –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å! "
                "–≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ ‚Äî —Ñ–∞–π–ª –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–π –∫–æ–¥ –∏–ª–∏ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã. "
                "–ó–∞–≥—Ä—É–∑–∫–∞ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –º–æ–¥—É–ª—è –º–æ–≥—É—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å —É–≥—Ä–æ–∑—É –¥–ª—è "
                "–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∞ —Ç–∞–∫–∂–µ –∞–∫–∫–∞—É–Ω—Ç–∞ Telegram. "
                "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–æ–≤–µ—Ä—è–µ—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫—É –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π.", False),
                buttons=buttons, message_thread_id=msg.message_thread_id,
                reply_to_message_id=msg.reply_to_message_id if msg else None
            )
            await msg.delete()
            return
        
        return
    try:
        await notify(f"{emoji(5386367538735104399, '‚åõ')} –ó–∞–≥—Ä—É–∂–∞—é {b(name)}")
        mpath = Path(get_root()) / 'plugins' / name
        isset = os.path.exists(mpath)
        unpack_module(file_path, mpath)
        manifest = read_yaml(mpath / 'manifest.yaml')
        if not no_alert_version:
            if versions := list(map(str, manifest.get('available_RimTUB_versions', []))):
                if Config.VERSION not in versions:
                    buttons = Buttons(
                        [
                            [
                                Button(
                                    'Info',
                                    callback_data='info',
                                    extra_data={
                                        'module_versions': versions
                                    })
                            ],
                            [
                                Button(
                                    "–í—Å–µ —Ä–∞–≤–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å (–º–æ–∂–µ—Ç –ø–æ–ª–æ–º–∞—Ç—å —é–±!)",
                                    callback_data='download_anyway_dmf_version',
                                    extra_data={
                                        'file_path': file_path,
                                        'name': name
                                    }
                                )
                            ],
                            [
                                Button(
                                    "–û—Ç–º–µ–Ω–∞ (—É–¥–∞–ª–∏—Ç—å –º–æ–¥—É–ª—å)",
                                    callback_data='delete',
                                    extra_data={
                                        'file_path': file_path,
                                    }
                                )
                            ]
                        ], general_extra_data={'msg': msg}
                    )
                    await mod.send_buttons(
                        msg.chat.id,
                        b("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –î–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è "
                          "–¥—Ä—É–≥–æ–π –≤–µ—Ä—Å–∏–∏ RimTUB –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º! "
                          "–ï–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç–µ, "
                          "–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º –æ—à–∏–±–∫–∞–º –∏ –ø–æ–ª–Ω–æ–º—É –≤—ã—Ö–æ–¥—É –∏–∑ —Å—Ç—Ä–æ—è —é–∑–µ—Ä–±–æ—Ç–∞. "
                          "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ –º–æ–¥—É–ª—å –Ω–∞ —Å–≤–æ–π —Å—Ç—Ä–∞—Ö –∏ —Ä–∏—Å–∫.", False),
                        buttons=buttons, message_thread_id=msg.message_thread_id
                    )
                    if not hasattr(msg, '_client'):
                        msg._client = app
                    elif not msg._client:
                        msg._client = app
                    if msg._client:
                        await msg.delete()
                    return
                
        os.remove(file_path)
        
        await app.load_module(name, restart=isset, exception=True, all_clients=True)    

        for client in clients:
            r = await client._start_on_ready(name)
            if r[0] == 'error':
                raise r[1]

        try:
            cap = bq(
                build_module_help_text(
                    helplist.get_module(
                        name,
                    ), '_', False
                ), True, False
            )
            
        except:
            cap = ''
        if isset:
            return await notify(f"{emoji(5206607081334906820, '‚úÖ')} –ú–æ–¥—É–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω –∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!" + "\n\n" + cap)
        await notify(
            f"{emoji(5206607081334906820, '‚úÖ')} –ú–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω!" + "\n\n" + cap
        )
    except Exception as e:
        await notify(
            b(f"{emoji(5240241223632954241, 'üö´')} –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!\n{await paste(format_exc())}", False)
        )
        mod.logger.error('dmf error', exc_info=True)


async def main(app: Client, mod: Module):

    cmd = mod.cmd

    @mod.callback('download_anyway')
    async def _download_anyway(c: C):
        return await dml(
            app, mod, c.extra_data['msg'],
            lambda text: c.edit_message_text(remove_emoji_tags(text)),
            c.extra_data['url'], True
        )

    @mod.callback('download_anyway_dmf')
    async def _download_anyway_dmf(c: C):
        return await dmf(
            app, mod, c.extra_data['msg'],
            lambda text: c.edit_message_text(remove_emoji_tags(text)),
            c.extra_data['file_path'], c.extra_data['name'], True
        )
    
    @mod.callback('download_anyway_dmf_version')
    async def _download_anyway_dmf_version(c: C):
        return await dmf(
            app, mod, c.extra_data['msg'],
            lambda text: c.edit_message_text(remove_emoji_tags(text)),
            c.extra_data['file_path'], c.extra_data['name'], True, True
        )
    
    @mod.callback('info')
    async def _info(c: C):
        return await c.answer(
            f"–¢–≤–æ—è –≤–µ—Ä—Å–∏—è RimTUB: {Config.VERSION}\n"
            f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ RimTUB: {', '.join(map(str, c.extra_data['module_versions']))}",
            show_alert=True
        )
    @mod.callback('delete')
    async def _info(c: C):
        os.remove(c.extra_data['file_path'])
        await c.edit_message_text("–ú–æ–¥—É–ª—å —É–¥–∞–ª–µ–Ω")

    @cmd(['dmf'])
    async def _dmf(_, msg: Message):
        try:
            if r:= msg.reply_to_message:
                if r.document:
                    if r.document.mime_type in ('application/zip') and r.document.file_name.endswith('.rimtub-module'):
                        pass
                    else:
                        return await msg.edit(f"{emoji(5210952531676504517, '‚ùå')} –û—à–∏–±–∫–∞: –§–∞–π–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–æ–¥—É–ª–µ–º!")
                else:
                    return await msg.edit(f"{emoji(5210952531676504517, '‚ùå')} –û—à–∏–±–∫–∞: –û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–æ–¥—É–ª–µ–º!")
            else:
                return await msg.edit(f"{emoji(5274099962655816924, '‚ùóÔ∏è')} –û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
            await msg.edit(
                f"{emoji(5386367538735104399, '‚åõ')} –ó–∞–≥—Ä—É–∂–∞—é..."
            )

            name = r.document.file_name.rsplit(".", 1)[0]
            path = await r.download(mod.path / r.document.file_name)
            await dmf(app, mod, msg, msg.edit, path, name, Config.DISABLE_MODULE_CHECKING, Config.DISABLE_MODULE_VERSION_CHECKING)
            
        except Exception as e:
            await msg.edit(f'–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª—å!\n{await paste(format_exc())}')
            raise LoadError() from e

    @cmd(['dml'])
    async def _dml(_, msg: Message, url=None):
        try:
            url = msg.text.split(maxsplit=1)[1]
        except IndexError:
            await msg.edit(f"{emoji(5447644880824181073, '‚ö†Ô∏è')} –í—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É!")
            return

        return await dml(app, mod, msg, msg.edit, url, Config.DISABLE_MODULE_CHECKING)
        


    @cmd(['sm'])
    async def _sm(_, msg: Message):
        try:
            _, name = msg.text.split(maxsplit=1)
        except ValueError:
            return await msg.edit(f"{emoji(5274099962655816924, '‚ùóÔ∏è')} –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è!")

        module_path = Path(find_directory(name, 'plugins', 1))

        if not module_path:
            return await msg.edit(f"{emoji(5447644880824181073, '‚ö†Ô∏è')} –¢–∞–∫–æ–π –º–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")

        manifest = read_yaml(module_path / 'manifest.yaml')

        cap = f"‚ùóÔ∏è–ú–æ–¥—É–ª—å –¢–û–õ–¨–ö–û –Ω–∞ @RimTUB –≤–µ—Ä—Å–∏–∏ {', '.join(map(str, manifest.get('available_RimTUB_versions', [])))}‚ùóÔ∏è\n\n"
        try:
            cap += bq(
                build_module_help_text(helplist.get_module(name.lower(), lower=True), '_', False),
                True, False
            )
        except:
            mod.logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ö–µ–ª–ø —Ç–µ–∫—Å—Ç. –û—à–∏–±–∫–∞ –≤ –¥–µ–±–∞–≥–µ")
            mod.logger.debug('.', exc_info=True)

        try:
            module_file = pack_module(module_path, mod.path / f"{os.path.split(module_path)[-1]}.rimtub-module")
        except:
            mod.logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∞–∫–æ–≤–∞—Ç—å –º–æ–¥—É–ª—å. –û—à–∏–±–∫–∞ –≤ –¥–µ–±–∞–≥–µ")
            mod.logger.debug('.', exc_info=True)
            return await msg.edit(f"–£–ø—Å! –ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∑–∞–ø–∞–∫–æ–≤–∞—Ç—å –º–æ–¥—É–ª—å!\n{await paste(format_exc())}")

        try:
            await msg.reply_document(module_file, caption=cap)
            await msg.delete()
        except Exception as e:
            await msg.edit(f"{emoji(5260293700088511294, '‚õîÔ∏è')} –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞!\n{await paste(format_exc())}")
            raise LoadError() from e
        finally:
            os.remove(module_file)
            
    @cmd('delm')
    async def _delm(app, msg):
        try:
            _, name = msg.text.split(maxsplit=1)
        except ValueError:
            return await msg.edit(f"{emoji(5274099962655816924, '‚ùóÔ∏è')} –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è!")
        
        module_path = find_directory(name, 'plugins', 1)
        if not module_path:
            return await msg.edit(f"{emoji(5447644880824181073, '‚ö†Ô∏è')} –¢–∞–∫–æ–π –º–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        
        shutil.rmtree(module_path)
        await app.stop_module(os.path.split(module_path)[-1], unload_help=True, all_clients=True)

        await msg.edit(
            f"{emoji(5445267414562389170, 'üóë')} –ú–æ–¥—É–ª—å {b(os.path.split(module_path)[-1])} —É–¥–∞–ª–µ–Ω!"
        )


    @cmd('relm')
    async def _relm(app: Client, msg):
        try:
            module_name = msg.text.split(maxsplit=1)[1]
        except IndexError:
            await msg.edit("–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è!")
        try:
            module_path = find_directory(module_name, 'plugins', 1)
            if not module_path:
                return await msg.edit(f"{emoji(5447644880824181073, '‚ö†Ô∏è')} –¢–∞–∫–æ–π –º–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            name = os.path.basename(module_path)
            await app.load_module(name, restart=True, exception=True, all_clients=True)

            for client in clients:
                r = await client._start_on_ready(name)
                if r[0] == 'error':
                    raise r[1]

        except Exception as e:
            await msg.edit(f'–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª—å!\n{await paste(format_exc())}')
            raise LoadError() from e
            
        else:
            await msg.edit(f"{emoji(5206607081334906820, '‚úÖ')} –ú–æ–¥—É–ª—å {b(os.path.basename(module_path))} –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω!")

    @cmd(['offm', 'stopm'])
    async def _offm(app: Client, msg):
        module_name = msg.text.split(maxsplit=1)[1]
        try:
            module_path = find_directory(module_name, 'plugins', 1)
            if not module_path:
                return await msg.edit(f"{emoji(5447644880824181073, '‚ö†Ô∏è')} –¢–∞–∫–æ–π –º–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            name = os.path.split(module_path)[-1]

            disabled_modules = await mod.db.get('disabled_modules', [])
            if name not in disabled_modules:
                await app.stop_module(name)
                disabled_modules.append(name)
                await mod.db.set('disabled_modules', disabled_modules)
        except Exception as e:
            await msg.edit(f'–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–∫–ª—é—á–∏—Ç—å –º–æ–¥—É–ª—å!\n{await paste(format_exc())}')
            raise LoadError() from e
        else:
            await msg.edit(f"{emoji(5206607081334906820, '‚úÖ')} –ú–æ–¥—É–ª—å {b(name)} –≤—ã–∫–ª—é—á–µ–Ω!")


    @cmd(['onm', 'startm'])
    async def _onm(app: Client, msg):
        module_name = msg.text.split(maxsplit=1)[1]
        try:
            module_path = find_directory(module_name, 'plugins', 1)
            if not module_path:
                return await msg.edit(f"{emoji(5447644880824181073, '‚ö†Ô∏è')} –¢–∞–∫–æ–π –º–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            name = os.path.split(module_path)[-1]

            
            disabled_modules: list = await mod.db.get('disabled_modules', [])
            if name in disabled_modules:
                await app.load_module(name, restart=False, exception=True)
                disabled_modules.remove(name)
                await mod.db.set('disabled_modules', disabled_modules)

        except Exception as e:
            await msg.edit(f'–ù–µ —É–¥–∞–ª–æ—Å—å –≤–∫–ª—é—á–∏—Ç—å –º–æ–¥—É–ª—å!\n{await paste(format_exc())}')
            raise LoadError() from e
        else:
            await msg.edit(f"{emoji(5206607081334906820, '‚úÖ')} –ú–æ–¥—É–ª—å {b(name)} –≤–∫–ª—é—á–µ–Ω!")

    @cmd(['offms'])
    async def _offms(app: Client, msg):
        disabled_modules = await mod.db.get('disabled_modules', [])
        if not disabled_modules:
            t = '–ù–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π!'
        else:
            t = f'–í—ã–∫–ª—é—á–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏: {",  ".join(map(code, disabled_modules))}'
        await msg.edit(t + f"\n\n–ß—Ç–æ–±—ã –≤—ã–∫–ª—é—á–∏—Ç—å –º–æ–¥—É–ª—å –∏—Å–ø–æ–ª—å–∑—É–π {code(Config.PREFIX+'offm')}\xa0[–ù–∞–∑–≤–∞–Ω–∏–µ\xa0–º–æ–¥—É–ª—è].\n"
                       f"–ß—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å: {code(Config.PREFIX+'onm')}\xa0[–ù–∞–∑–≤–∞–Ω–∏–µ\xa0–º–æ–¥—É–ª—è]")
