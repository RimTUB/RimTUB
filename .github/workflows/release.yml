# .github/workflows/release.yml
name: RimTUB Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Tag & archive name (e.g. dev‑1.2.3‑4)"
        required: true
      version_tuple:
        description: "Tuple (e.g. \"(1, 2, 3, 'dev', 4)\")"
        required: true
      version_type:
        description: "Release/Dev/Test/Beta/Alpha/Pre"
        required: true
      update_type:
        description: "Update/Fix/Patch"
        required: true

env:
  API_URL: ${{ secrets.RELEASE_API_URL }}          # e.g. https://example.com/queue_release
  API_TOKEN: ${{ secrets.RELEASE_API_TOKEN }}      # x‑api‑token

jobs:
  build‑release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0          # need full history for previous tag lookup

    - name: Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    # 1. patch utils/config/default_config.py
    - name: Bump version in source
      run: |
        file="utils/config/default_config.py"
        sed -i -E "s/^VERSION = .*/VERSION = '${{ github.event.inputs.version }}'/" "$file"
        sed -i -E "s/^VERSION_TUPLE = .*/VERSION_TUPLE = ${{ github.event.inputs.version_tuple }}/" "$file"
        git diff --color

    # 2. get previous tag
    - id: prev
      run: echo "tag=$(git describe --tags --abbrev=0 || echo none)" >> $GITHUB_OUTPUT

    # 3. zip
    - name: Build archive
      run: |
        zip -r "RimTUB_${{ github.event.inputs.version }}.zip" . -x '.git*' 'tests/*'

    # 4. grab changelog text
    - id: changelog
      run: |
        log=$(cat .github/RELEASE_LOG.md)
        echo 'text<<EOF' >> $GITHUB_OUTPUT
        echo "$log"       >> $GITHUB_OUTPUT
        echo 'EOF'        >> $GITHUB_OUTPUT

    # 5. full changelog link
    - id: link
      run: |
        prev="${{ steps.prev.outputs.tag }}"
        new="${{ github.event.inputs.version }}"
        if [ "$prev" = "none" ]; then
          url=""
        else
          url="[Full ChangeLog: $prev...$new](https://github.com/${{ github.repository }}/compare/$prev...$new)"
        fi
        echo "url=$url" >> $GITHUB_OUTPUT

    # 6. create Git tag & push
    - name: Commit + tag
      run: |
        git config user.name  github-actions
        git config user.email github-actions@users.noreply.github.com
        git commit -am "Release ${{ github.event.inputs.version }}"
        git tag "${{ github.event.inputs.version }}"
        git push --follow-tags

    # 7. GitHub Release
    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        name: "RimTUB ${{ github.event.inputs.version }}"
        tag_name: ${{ github.event.inputs.version }}
        body: |
          ## ChangeLog:
          ${{ steps.changelog.outputs.text }}

          ${{ steps.link.outputs.url }}
        files: |
          RimTUB_${{ github.event.inputs.version }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # with:

    # 8. POST to external API
    - name: Notify Release API
      run: |
        jq -n --arg v "${{ github.event.inputs.version }}" \
               --arg t "${{ github.event.inputs.update_type }}" \
               --arg c "${{ steps.changelog.outputs.text }}" \
               '{version:$v,update_type:$t,changelog:$c}' \
        | curl -X POST "$API_URL/queue_release" \
                -H "Content-Type: application/json" \
                -H "x-api-token: $API_TOKEN" \
                -d @-
